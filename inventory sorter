local UserInputService = game:GetService("UserInputService")

local Sorting = {
    Enabled = true,
    ["Slot 1"] = "[Double-Barrel SG]",
    ["Slot 2"] = "[Revolver]",
    ["Slot 3"] = "[Shotgun]",
    ["Slot 4"] = "[Tactical Shotgun]",
    ["Slot 5"] = "[USP]",
    ["Slot 6"] = "[Katana]",
    ["Slot 7"] = "[Cookie]",
    ["Slot 8"] = "[Pizza]",
    ["Slot 9"] = "[Chicken]",
    ["Slot 0"] = "[Hamburger]",
}

local function sortInventory()
    if not Sorting.Enabled then
        return
    end

    local player = game.Players.LocalPlayer
    local backpack = player:FindFirstChildOfClass("Backpack")
    if not backpack then
        return
    end

    local originalItems = {}
    for _, tool in pairs(backpack:GetChildren()) do
        table.insert(originalItems, tool)
    end
    for _, tool in pairs(originalItems) do
        tool.Parent = nil
    end

    for i = 1, 10 do
        local slot = 'Slot ' .. tostring(i % 10)
        local desiredItemName = Sorting[slot]
        if desiredItemName and desiredItemName ~= "" then
            for index, tool in ipairs(originalItems) do
                if tool.Name == desiredItemName then
                    tool.Parent = backpack
                    table.remove(originalItems, index)
                    break
                end
            end
        end
    end

    for _, tool in pairs(originalItems) do
        tool.Parent = backpack
    end
end

sortInventory()
