-- dh games are recommended also use q to activate or deactivate the esp

-- esp

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

local localPlayer = Players.LocalPlayer

-- Create and configure ESP elements
local espGui = Instance.new("ScreenGui")
espGui.Name = "ESPGui"
espGui.ResetOnSpawn = false
espGui.Parent = CoreGui

local boxEnabled = false

local function createESP(player)
    local espFrame = Instance.new("Frame")
    espFrame.Size = UDim2.new(0, 100, 0, 100) -- Adjust as needed
    espFrame.BackgroundTransparency = 1
    espFrame.Parent = espGui
    
    local box = Instance.new("Frame")
    box.Size = UDim2.new(0, 100, 0, 100) -- Adjust as needed
    box.BorderSizePixel = 1
    box.BorderColor3 = Color3.new(1, 0, 0) -- Red border for box
    box.BackgroundTransparency = 1
    box.Parent = espFrame
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Text = player.Name
    nameLabel.Size = UDim2.new(0, 100, 0, 20)
    nameLabel.Position = UDim2.new(0, 0, 0, -20) -- Position above the box
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextColor3 = Color3.new(1, 1, 1)
    nameLabel.TextStrokeTransparency = 0.5
    nameLabel.Parent = espFrame
    
    local healthLabel = Instance.new("TextLabel")
    healthLabel.Text = "Health: " .. tostring(player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").Health or 0)
    healthLabel.Size = UDim2.new(0, 100, 0, 20)
    healthLabel.Position = UDim2.new(0, 0, 0, 100) -- Position below the box
    healthLabel.BackgroundTransparency = 1
    healthLabel.TextColor3 = Color3.new(1, 1, 1)
    healthLabel.TextStrokeTransparency = 0.5
    healthLabel.Parent = espFrame
    
    local toolLabel = Instance.new("TextLabel")
    toolLabel.Text = "Tool: None"
    toolLabel.Size = UDim2.new(0, 100, 0, 20)
    toolLabel.Position = UDim2.new(0, 0, 0, 120) -- Position below the health
    toolLabel.BackgroundTransparency = 1
    toolLabel.TextColor3 = Color3.new(1, 1, 1)
    toolLabel.TextStrokeTransparency = 0.5
    toolLabel.Parent = espFrame
    
    local function updateTool()
        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").Tool then
            toolLabel.Text = "Tool: " .. player.Character:FindFirstChildOfClass("Humanoid").Tool.Name
        else
            toolLabel.Text = "Tool: None"
        end
    end
    
    RunService.RenderStepped:Connect(function()
        if boxEnabled then
            -- Update box position and size based on player's character
            if player.Character and player.Character:FindFirstChild("Head") then
                local head = player.Character:FindFirstChild("Head")
                local screenPosition, onScreen = workspace.CurrentCamera:WorldToScreenPoint(head.Position)
                if onScreen then
                    espFrame.Position = UDim2.new(0, screenPosition.X - (espFrame.Size.X.Offset / 2), 0, screenPosition.Y - (espFrame.Size.Y.Offset / 2))
                    updateTool()
                    healthLabel.Text = "Health: " .. tostring(player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").Health or 0)
                end
            end
        end
    end)
    
    return espFrame
end

local function toggleESP()
    boxEnabled = not boxEnabled
    if boxEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= localPlayer then
                createESP(player)
            end
        end
    else
        for _, gui in pairs(espGui:GetChildren()) do
            gui:Destroy()
        end
    end
end

UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.Q then
        toggleESP()
    end
end)

-- Create a notification
StarterGui:SetCore("SendNotification", {
    Title = "ESP",
    Text = "Press Q to toggle ESP on/off.",
    Duration = 10,
})

-- q gui good for mobile users

local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer

-- Create the main ScreenGui
local gui = Instance.new("ScreenGui")
gui.Name = "saxx.lol" -- GUI name
gui.ResetOnSpawn = false -- Ensure the GUI doesn't disappear on reset
gui.Parent = CoreGui -- Set the GUI parent to CoreGui

-- Create the main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 100)
frame.Position = UDim2.new(0.5, -100, 0.5, -50)
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background
frame.BackgroundTransparency = 0.5 -- Slightly transparent
frame.BorderSizePixel = 2
frame.BorderColor3 = Color3.fromRGB(128, 128, 128) -- Grey outline
frame.Active = true
frame.Draggable = true -- Make the frame draggable
frame.Parent = gui

-- Add rounded corners to the main frame
local UICornerOuter = Instance.new("UICorner")
UICornerOuter.CornerRadius = UDim.new(0, 20)
UICornerOuter.Parent = frame

-- Create the main button
local saxxButton = Instance.new("TextButton")
saxxButton.Name = "saxxButton" -- Button name
saxxButton.Size = UDim2.new(0, 180, 0, 60)
saxxButton.Position = UDim2.new(0.5, -90, 0.5, -30)
saxxButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Dark grey background
saxxButton.BorderSizePixel = 0
saxxButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
saxxButton.Text = "saxx.lol" -- Button text
saxxButton.Font = Enum.Font.SourceSans
saxxButton.TextSize = 24
saxxButton.TextScaled = true -- Makes the text larger
saxxButton.Parent = frame

-- Add rounded corners to the button
local UICornerButton = Instance.new("UICorner")
UICornerButton.CornerRadius = UDim.new(0, 10)
UICornerButton.Parent = saxxButton

-- Track the state of the GUI
local isGuiOn = false

-- Function to print status
local function PrintStatus()
    if isGuiOn then
        print("camlock on/saxx.lol on")
    else
        print("camlock off/saxx.lol off")
    end
end

-- Button click event
saxxButton.MouseButton1Click:Connect(function()
    isGuiOn = not isGuiOn
    PrintStatus()
    
    -- Simulate "Q" key press
    local vim = game:GetService("VirtualInputManager")
    vim:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
end)

-- Key press event to handle specific actions
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.Q then
        -- Toggle state
        isGuiOn = not isGuiOn
        PrintStatus()
    end
end)

-- Chat command to kill the GUI
player.Chatted:Connect(function(message)
    if message:lower() == "/e killsaxx" then
        if gui then
            gui:Destroy()
            isGuiOn = false
            PrintStatus()
            
            -- Display notification
            StarterGui:SetCore("SendNotification", {
                Title = "Info";
                Text = "the saxx.lol gui has been removed.";
                Duration = 15; -- 15 seconds notification
            })
        end
    end
end)

-- Display notification when the GUI is created
StarterGui:SetCore("SendNotification", {
    Title = "Info";
    Text = "Type /e killgui to kill the saxx.lol gui.";
    Duration = 15; -- 15 seconds notification
})
