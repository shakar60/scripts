-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

-- Variables
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Settings
local settings = {
    showCredits = true,  -- Toggle credits text
    showMainText = true,  -- Toggle main text
    showLoadingText = true,  -- Toggle loading text
    showLoadedText = true,  -- Toggle loaded text
    showCountdownText = true,  -- Toggle countdown text
    rainbowEffect = true,  -- Toggle rainbow effect on text
    blurEnabled = true,  -- Toggle blur effect
    creditText = "Credits to sh4k4r6o On Discord For Making The Loading Gui",  -- Custom credit text
    mainText = "Orium Gui By gragrillz Credits to sh4k4r6o",  -- Custom main text
    loadingText = "Orium Gui LOADING",  -- Custom loading text
    loadedText = "LOADED ORIUMS GUI",  -- Custom loaded text
    countdownText = "Please wait ",  -- Countdown text
    creditDuration = 2,  -- Duration to show credit text
    mainTextDuration = 2,  -- Duration to show main text
    loadingTextDuration = 2.5,  -- Duration for the loading text and dots
    loadedTextDuration = 0.5,  -- Duration to show loaded text
    guiDuration = 5,  -- Total duration for the entire GUI before it gets destroyed
    fontSettings = {
        mainTextFont = Enum.Font.Arcade,  -- Font for main text
        creditsFont = Enum.Font.Arcade,  -- Font for credits text
        loadingTextFont = Enum.Font.Arcade,  -- Font for loading text
        loadedTextFont = Enum.Font.Arcade,  -- Font for loaded text
        countdownTextFont = Enum.Font.Arcade  -- Font for countdown text
    }
}

-- Function to apply rainbow effect
local function ApplyRainbowEffect(label)
    local UIStroke = Instance.new("UIStroke")
    UIStroke.Parent = label
    UIStroke.Thickness = 2
    UIStroke.Transparency = 0.5

    local function RainbowEffect()
        local hue = 0
        while label and label.Parent do
            hue = (hue + 1) % 360
            local color = Color3.fromHSV(hue / 360, 1, 1)
            UIStroke.Color = color
            label.TextColor3 = color
            wait(0.01)
        end
    end

    spawn(RainbowEffect)
end

-- Initialize GUI elements
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BlurGui"
screenGui.Parent = PlayerGui

local blurEffect
if settings.blurEnabled then
    blurEffect = Instance.new("BlurEffect")
    blurEffect.Name = "BlurEffect"
    blurEffect.Size = 0
    blurEffect.Parent = game:GetService("Lighting")
end

local textLabel
if settings.showMainText then
    textLabel = Instance.new("TextLabel")
    textLabel.Name = "TextLabel"
    textLabel.Parent = screenGui
    textLabel.BackgroundTransparency = 1
    textLabel.Position = UDim2.new(0.5, -200, 0.5, -50)
    textLabel.Size = UDim2.new(0, 400, 0, 100)
    textLabel.Font = settings.fontSettings.mainTextFont
    textLabel.Text = settings.mainText
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextScaled = true
    textLabel.TextStrokeTransparency = 0.8
    textLabel.TextSize = 40
end

local creditsLabel
if settings.showCredits then
    creditsLabel = Instance.new("TextLabel")
    creditsLabel.Name = "CreditsLabel"
    creditsLabel.Parent = screenGui
    creditsLabel.BackgroundTransparency = 1
    creditsLabel.Position = UDim2.new(0.5, -200, 0.5, 60)
    creditsLabel.Size = UDim2.new(0, 400, 0, 50)
    creditsLabel.Font = settings.fontSettings.creditsFont
    creditsLabel.Text = settings.creditText
    creditsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    creditsLabel.TextScaled = true
    creditsLabel.TextStrokeTransparency = 0.8
    creditsLabel.TextSize = 8
end

local loadingLabel
if settings.showLoadingText then
    loadingLabel = Instance.new("TextLabel")
    loadingLabel.Name = "LoadingLabel"
    loadingLabel.Parent = screenGui
    loadingLabel.BackgroundTransparency = 1
    loadingLabel.Position = UDim2.new(0.5, -200, 0.5, -50)
    loadingLabel.Size = UDim2.new(0, 400, 0, 100)
    loadingLabel.Font = settings.fontSettings.loadingTextFont
    loadingLabel.Text = settings.loadingText
    loadingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    loadingLabel.TextScaled = true
    loadingLabel.TextStrokeTransparency = 0.8
    loadingLabel.TextSize = 40
end

local loadedLabel
if settings.showLoadedText then
    loadedLabel = Instance.new("TextLabel")
    loadedLabel.Name = "LoadedLabel"
    loadedLabel.Parent = screenGui
    loadedLabel.BackgroundTransparency = 1
    loadedLabel.Position = UDim2.new(0.5, -200, 0.5, -50)
    loadedLabel.Size = UDim2.new(0, 400, 0, 100)
    loadedLabel.Font = settings.fontSettings.loadedTextFont
    loadedLabel.Text = settings.loadedText
    loadedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    loadedLabel.TextScaled = true
    loadedLabel.TextStrokeTransparency = 0.8
    loadedLabel.TextSize = 40
end

local countdownLabel
if settings.showCountdownText then
    countdownLabel = Instance.new("TextLabel")
    countdownLabel.Name = "CountdownLabel"
    countdownLabel.Parent = screenGui
    countdownLabel.BackgroundTransparency = 1
    countdownLabel.Position = UDim2.new(0.5, -200, 0.5, 120)
    countdownLabel.Size = UDim2.new(0, 400, 0, 50)
    countdownLabel.Font = settings.fontSettings.countdownTextFont
    countdownLabel.Text = settings.countdownText .. settings.guiDuration
    countdownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    countdownLabel.TextScaled = true
    countdownLabel.TextStrokeTransparency = 0.8
    countdownLabel.TextSize = 20
end

-- Apply rainbow effect if enabled
if settings.rainbowEffect then
    if textLabel then
        ApplyRainbowEffect(textLabel)
    end
    if creditsLabel then
        ApplyRainbowEffect(creditsLabel)
    end
    if loadingLabel then
        ApplyRainbowEffect(loadingLabel)
    end
    if loadedLabel then
        ApplyRainbowEffect(loadedLabel)
    end
    if countdownLabel then
        ApplyRainbowEffect(countdownLabel)
    end
end

-- Apply blur effect
local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
local goal = {Size = 20}
local tween = TweenService:Create(blurEffect, tweenInfo, goal)

if settings.blurEnabled then
    tween:Play()
end

-- Countdown function
local function Countdown()
    local countdowns = {".", "..", "...", "....", ".....", "......", ".......", "........", ".........", ".........."}
    for i = 1, #countdowns do
        if settings.showLoadingText and loadingLabel then
            loadingLabel.Text = settings.loadingText .. countdowns[i]
        end
        wait(1)
    end
end

-- Main script logic
if settings.showMainText then
    wait(settings.mainTextDuration)
    if settings.showLoadingText then
        textLabel.Text = settings.loadingText
        Countdown()
    end
end

if settings.showLoadedText then
    textLabel.Text = settings.loadedText
    wait(settings.loadedTextDuration)
end

if settings.showCountdownText then
    local timeLeft = settings.guiDuration
    while timeLeft > 0 do
        countdownLabel.Text = settings.countdownText .. timeLeft
        wait(1)
        timeLeft = timeLeft - 1
    end
end

-- Cleanup
wait(settings.guiDuration)

screenGui:Destroy()
if blurEffect then
    blurEffect:Destroy()
end
