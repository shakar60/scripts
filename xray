local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer

-- Create a GUI
local Gui = Instance.new("ScreenGui")
Gui.Parent = CoreGui

local OuterFrame = Instance.new("Frame")
OuterFrame.Size = UDim2.new(0, 200, 0, 100)
OuterFrame.Position = UDim2.new(0.5, -100, 0.5, -50)
OuterFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
OuterFrame.BackgroundTransparency = 0.5
OuterFrame.BorderSizePixel = 2
OuterFrame.BorderColor3 = Color3.fromRGB(128, 128, 128)
OuterFrame.Active = true
OuterFrame.Draggable = true
OuterFrame.Parent = Gui

-- Add rounded corners to the outer frame
local UICornerOuter = Instance.new("UICorner")
UICornerOuter.CornerRadius = UDim.new(0, 20)
UICornerOuter.Parent = OuterFrame

local XRayButton = Instance.new("TextButton")
XRayButton.Size = UDim2.new(0, 180, 0, 60)
XRayButton.Position = UDim2.new(0.5, -90, 0.5, -30)
XRayButton.Text = "X-Ray Off"
XRayButton.TextColor3 = Color3.fromRGB(255, 255, 255)
XRayButton.TextScaled = true
XRayButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
XRayButton.BorderSizePixel = 0
XRayButton.Parent = OuterFrame

-- Add rounded corners to the button
local UICornerButton = Instance.new("UICorner")
UICornerButton.CornerRadius = UDim.new(0, 10)
UICornerButton.Parent = XRayButton

-- Toggle state
local isXRayOn = false

-- Function to toggle X-ray
local function toggleXRay()
    isXRayOn = not isXRayOn
    XRayButton.Text = isXRayOn and "X-Ray On" or "X-Ray Off"
    
    for _, descendant in pairs(Workspace:GetDescendants()) do
        if descendant:IsA("BasePart") and descendant.Transparency < 1 then
            if isXRayOn then
                if not descendant:FindFirstChild("OriginalTransparency") then
                    local originalTransparency = Instance.new("NumberValue")
                    originalTransparency.Name = "OriginalTransparency"
                    originalTransparency.Value = descendant.Transparency
                    originalTransparency.Parent = descendant
                end
                descendant.Transparency = 0.5
            else
                if descendant:FindFirstChild("OriginalTransparency") then
                    descendant.Transparency = descendant.OriginalTransparency.Value
                    descendant.OriginalTransparency:Destroy()
                else
                    descendant.Transparency = 0
                end
            end
        end
    end
end

-- Button click event
XRayButton.MouseButton1Click:Connect(toggleXRay)

-- Key press event to toggle X-ray
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.E then
        toggleXRay()
    end
end)

-- Chat command to destroy GUI
player.Chatted:Connect(function(message)
    if message:lower() == "/e killxray" then
        Gui:Destroy()
        if isXRayOn then
            toggleXRay()  -- Turn off Xray before destroying the Gui
        end
    end
end)

-- Show notification
StarterGui:SetCore("SendNotification", {
    Title = "Info",
    Text = "Type /e killxray To Destroy The Xray Gui",
    Duration = 30,
})

-- Show notification
StarterGui:SetCore("SendNotification", {
    Title = "Info",
    Text = "Click E To Turn On/Off The Xray Or Click the Xray Button",
    Duration = 15,
})

-- Ensure GUI persists across resets
player.CharacterAdded:Connect(function()
    if not Gui.Parent then
        Gui.Parent = CoreGui
    end
end)
