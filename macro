if not Game:IsLoaded() then Game.Loaded:Wait() end

local Players = Game:GetService("Players")
local RunService = Game:GetService("RunService")
local UserInputService = Game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerCharacter = player.Character or player.CharacterAdded:Wait()
local playerHumanoidRootPart = playerCharacter:FindFirstChild("HumanoidRootPart")
local playerHumanoid = playerCharacter:FindFirstChildOfClass("Humanoid")
local playerCamera = workspace.CurrentCamera
local playerGui = player:FindFirstChild("PlayerGui") or player:WaitForChild("PlayerGui")

player.CharacterAdded:Connect(function(Character)
    playerCharacter = Character
    playerHumanoid = playerCharacter:FindFirstChildOfClass("Humanoid") or playerCharacter:WaitForChild("Humanoid")
    playerHumanoidRootPart = playerCharacter:WaitForChild("HumanoidRootPart")
end)

Script.Functions.EnableShiftlock = function()
    if playerCharacter and playerHumanoid and playerHumanoidRootPart then
        playerHumanoid.AutoRotate = false
        playerHumanoidRootPart.CFrame = CFrame.new(playerHumanoidRootPart.Position, 
            Vector3.new(playerCamera.CFrame.LookVector.X * 10e10, playerHumanoidRootPart.Position.Y, 
            playerCamera.CFrame.LookVector.Z * 10e10))
    end
end

Script.Functions.DisableShiftlock = function()
    if playerCharacter and playerHumanoid and playerHumanoidRootPart then
        playerHumanoid.AutoRotate = true
    end
    
    if Script.Settings.Marco.Connection then
        Script.Settings.Marco.Connection:Disconnect()
        Script.Settings.Marco.Connection = nil
    end
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = playerGui
ScreenGui.Name = "Marco UI"
ScreenGui.Enabled = true
ScreenGui.ResetOnSpawn = false
ScreenGui.DisplayOrder = math.huge
ScreenGui.IgnoreGuiInset = false
ScreenGui.AutoLocalize = true
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
ScreenGui.RootLocalizationTable = nil

local Container = Instance.new("Frame")
Container.Parent = ScreenGui
Container.Name = "Container"
Container.Position = UDim2.new(0.925, 0, 0.25, 0)
Container.Size = UDim2.new(0, 100, 0, 35)
Container.AnchorPoint = Vector2.new(0.5, 0.5)
Container.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Container.BackgroundTransparency = 0.85
Container.BorderColor3 = Color3.fromRGB(0, 0, 0)
Container.BorderMode = Enum.BorderMode.Outline
Container.BorderSizePixel = 0
Container.ClipsDescendants = false
Container.LayoutOrder = 0
Container.Rotation = 0
Container.Selectable = false
Container.SizeConstraint = Enum.SizeConstraint.RelativeXY
Container.Style = Enum.FrameStyle.Custom
Container.AutomaticSize = Enum.AutomaticSize.None
Container.Visible = true
Container.Active = true
Container.Draggable = getgenv().CFG.Button.Draggable
Container.ZIndex = math.huge

local ContainerUICorner = Instance.new("UICorner")
ContainerUICorner.Parent = Container
ContainerUICorner.Name = "UICorner"
ContainerUICorner.CornerRadius = UDim.new(0.25, 0)
ContainerUICorner.Archivable = true

local ImageLabel = Instance.new("ImageLabel")
ImageLabel.Parent = Container
ImageLabel.Name = "Marco OFF"
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ImageLabel.BackgroundTransparency = 1
ImageLabel.Size = UDim2.new(0, 30, 0, 30)
ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel.Position = UDim2.new(0.175, 0, 0.5, 0)
ImageLabel.Image = "rbxassetid://10734923214"
ImageLabel.Active = false
ImageLabel.Archivable = true
ImageLabel.AutoLocalize = true
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderMode = Enum.BorderMode.Outline
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = false
ImageLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.ImageRectOffset = Vector2.new(0, 0)
ImageLabel.ImageRectSize = Vector2.new(0, 0)
ImageLabel.ImageTransparency = 0
ImageLabel.ResampleMode = Enum.ResamplerMode.Default
ImageLabel.ScaleType = Enum.ScaleType.Stretch
ImageLabel.SliceCenter = Rect.new(0, 0, 0, 0)
ImageLabel.SliceScale = 1
ImageLabel.TileSize = UDim2.new(1, 0, 1, 0)
ImageLabel.Visible = true
ImageLabel.ZIndex = math.huge
ImageLabel.LayoutOrder = 0
ImageLabel.Rotation = 0
ImageLabel.Selectable = false
ImageLabel.SizeConstraint = Enum.SizeConstraint.RelativeXY
ImageLabel.ImageTransparency = 0
ImageLabel.ScaleType = Enum.ScaleType.Fit

local ImageLabelUICorner = Instance.new("UICorner")
ImageLabelUICorner.Parent = ImageLabel
ImageLabelUICorner.Name = "UICorner"
ImageLabelUICorner.CornerRadius = UDim.new(0.25, 0)
ImageLabelUICorner.Archivable = true

local TextButton = Instance.new("TextButton")
TextButton.Parent = Container
TextButton.Name = "Marco Button"
TextButton.Text = "Macro"
TextButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
TextButton.BackgroundTransparency = 1
TextButton.Size = getgenv().CFG.Button.Size
TextButton.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton.Position = UDim2.new(0.65, 0, 0.5, 0)
TextButton.Font = Enum.Font.Arimo
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 20
TextButton.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
TextButton.Active = false
TextButton.Archivable = true
TextButton.AutoLocalize = true
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderMode = Enum.BorderMode.Outline
TextButton.BorderSizePixel = 0
TextButton.ClipsDescendants = false
TextButton.LayoutOrder = 0
TextButton.Modal = false
TextButton.RichText = false
TextButton.Rotation = 0
TextButton.Selectable = true
TextButton.Selected = false
TextButton.SizeConstraint = Enum.SizeConstraint.RelativeXY
TextButton.Style = Enum.ButtonStyle.Custom
TextButton.TextStrokeTransparency = 1
TextButton.TextTransparency = 0
TextButton.TextTruncate = Enum.TextTruncate.None
TextButton.TextWrapped = false
TextButton.Visible = true
TextButton.ZIndex = math.huge
TextButton.AutoButtonColor = false

local TextButtonUICorner = Instance.new("UICorner")
TextButtonUICorner.Parent = TextButton
TextButtonUICorner.Name = "UICorner"
TextButtonUICorner.CornerRadius = UDim.new(0.25, 0)
TextButtonUICorner.Archivable = true

local TextButtonUITextSizeConstraint = Instance.new("UITextSizeConstraint")
TextButtonUITextSizeConstraint.Parent = TextButton
TextButtonUITextSizeConstraint.Name = "UITextSizeConstraint"
TextButtonUITextSizeConstraint.MaxTextSize = 50
TextButtonUITextSizeConstraint.MinTextSize = 10
TextButtonUITextSizeConstraint.Archivable = true

TextButton.MouseButton1Click:Connect(function()
    Script.Settings.Marco.Enabled = not Script.Settings.Marco.Enabled

    if Script.Settings.Marco.Enabled then
        ImageLabel.Image = "rbxassetid://10735024209"
        ImageLabel.Name = "Marco ON"
    elseif not Script.Settings.Marco.Enabled then
        Script.Functions.DisableShiftlock()
        ImageLabel.Image = "rbxassetid://10734923214"
        ImageLabel.Name = "Marco OFF"
    end
end)

local TimeElapsed = 0

RunService.RenderStepped:Connect(function(DeltaTime)
    TimeElapsed = TimeElapsed + DeltaTime
    if TimeElapsed >= Script.Settings.Marco.Delay then
        if Script.Settings.Marco.Enabled then
            if not Script.Settings.Marco.Connection then
                Script.Settings.Marco.Connection = RunService.RenderStepped:Connect(function()
                    Script.Functions.EnableShiftlock()
                end)
            elseif Script.Settings.Marco.Connection then
                Script.Functions.DisableShiftlock()
            end
        end
        TimeElapsed = 0
    end
end)
